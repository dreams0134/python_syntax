# *** Типы данных ***

# целочисленные значения (int, integer - целое число)
my_int = 100

# числа с плавающей точкой (вещественные числа - дробные значения) (float - у чисел есть точечка)
my_float = 3.14 # ставится именно точка, запятые используется для других целей и может выйти ошибка

# булевы типы данных (bool, boolean)
# в честь Джорджа Буля математик, один из отцов, гуру (булева алгебра - направление в математике, которая занимается логическими типами данных)

bool_1 = True # с заглавной буковки, истина (логическая 1)
bool_1 = False # только 2 значения, как 0 и 1 - ложь (технически это логический 0)

# строковые данные/значения (одинарный символ - буква, число, знак препинания, а такжке набор символов - слово/слова, текст) (str, string)
# python максимально упрощенный, за счет чего максимально востребован в плане простоты усвоения
my_str_1 = 'A' # заглавная буква не равнозначна строчной - у них разные кодировки, регистры
my_str_2 = "G"
my_str_3 = "hello"
my_str_4 = "мой текст" #строковые типы данных - это массивы
my_text = """
много
строчный
текст
"""
# print(my_text)

# Способы форматирования строк
# 1.Конкатенация строк - старый способ форматирования, до сих пор используется, пришел из C языков, в которых активно используется
str_1 = "Hello"
str_2 = "World"

num_1 = 777
# print(str_1 + " " + str_2)
res = str_1 + ' ' + str_2 + str(num_1) # класс str (родственник int) отвечает за типы данных как строки

# print(res)

# f - string (f-строка)
# res = f"Hello World {num_1}" # { - скобочка нужна, если хотим передать какие-то значения
res = f"Hello {str_2} {num_1}" 

# print(res)

# Задание:
# испоользуя input ("Ваше имя: ") необходимо сделать так,
# чтобы в ответ в терминале был такой результат
# "Привет, Тамара!"

# name = input("Ваше имя: ")

# print(f"Привет, {name}!")


# Арифметические операции (сложение, вычитание и прочее)

a = 10
b = 3

# сложение
res = a + b

# вычитание
res = a - b

# умножение
res = a * b

# обычное деление
# всегда возвращает/выводит число с плавающей точкой
res = a / b

# целочисленное деление - всегда возвращает/выводит целую часть(округляет)
res = a // b

# деление по остатку
res = a % b

print(res)